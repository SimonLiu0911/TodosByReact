{"version":3,"sources":["Title.js","Create.js","Li.js","Todos.js","State.js","App.js","index.js"],"names":["Title","className","PureComponent","Create","state","val","addData","this","props","id","placeholder","type","value","onChange","e","setState","target","onKeyDown","keyCode","trim","alert","Li","edit","ref","createRef","prevProps","prevState","current","select","item","changeData","editText","remove","done","txt","checked","onDoubleClick","onClick","onBlur","Todos","data","map","key","State","removeDone","doneData","filter","undoneData","length","href","App","push","Date","now","forEach","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3484f13e.chunk.js","sourcesContent":["import React, {PureComponent} from 'react';\n\nclass Title extends PureComponent {\n    render() {\n        return (\n            <div className=\"title\">\n                <h1>todos</h1>\n            </div>\n        );\n    }\n}\n\n// function Title() {\n//     return (\n//         <div className=\"title\">\n//             <h1>todos</h1>\n//         </div>\n//     );\n// }\n\nexport default Title;","import React, {PureComponent} from 'react';\n\nclass Create extends PureComponent {\n    state = {\n        val: '',\n    }\n    render() {\n        let {addData} = this.props;\n        let {val} = this.state\n        return (\n            <div id=\"create-todo\">\n                <input\n                    id=\"new-todo\"\n                    placeholder=\"What needs to be done?\"\n                    type=\"text\"\n                    value={val}\n                    onChange={(e)=>{\n                        this.setState({\n                            val:e.target.value\n                        })\n                    }}\n                    onKeyDown={(e)=>{\n                        if(e.keyCode === 13) {\n                            if(!val.trim()){\n                                alert(\"Plz type something!\");\n                                return;\n                            }\n                            addData(val);\n                            this.setState({\n                                val: '',\n                            })\n                        }\n                    }}\n                />\n            </div>\n        );\n    }\n}\n\nexport default Create;","import React, {PureComponent, createRef} from 'react';\n\nclass Li extends PureComponent {\n    state = {\n        edit: false,\n        ref: createRef(),\n        val: \"\"\n    }\n    static getDerivedStateFromProps(props, state){\n        if (!state.edit) {\n            state.val = props.item.txt\n        }\n        return true;\n    }\n    componentDidUpdate(prevProps, prevState){\n        // 組件更新完成之後，判斷是否需要給input獲得焦點\n        if (this.state.edit && !prevState.edit) {\n            // console.log(this.state.ref.current)\n            this.state.ref.current.select();\n        }\n    }\n    render() {\n        let {item, changeData, editText, remove} = this.props;\n        let {id, done, txt} = item;\n        let {edit, val} = this.state;\n        return (\n            <li className={edit?\"editing\":\"\"}>\n                <div className={\"todo \" + (done?\"done\":\"\")}>\n                    <div className=\"display\">\n                        <input\n                            className=\"check\"\n                            type=\"checkbox\"\n                            checked={done}\n                            onChange={(e)=>{\n                                changeData(id, e.target.checked);\n                            }}\n                        />\n                        <div\n                            className=\"todo-content\"\n                            onDoubleClick={()=>{\n                                this.setState({\n                                    edit: true,\n                                })\n                            }}\n                        >{txt}</div>\n                        <span\n                            className=\"todo-destroy\"\n                            onClick={()=>{\n                                remove(id);\n                            }}\n                        ></span>\n                    </div>\n                    <div className=\"edit\">\n                        <input\n                            ref={this.state.ref}\n                            className=\"todo-input\"\n                            type=\"text\"\n                            value={val}\n                            onChange={(e)=>{\n                                this.setState({\n                                    val: e.target.value\n                                })\n                            }}\n                            onBlur={()=>{\n                                // this.setState({\n                                //     edit: false\n                                // })\n                                this.state.edit=false;\n                                if (val.trim()) {\n                                    editText(id, val)\n                                } else {\n                                    editText(id, txt)\n                                }\n                            }}\n                        />\n                    </div>\n                </div>\n            </li>\n        );\n    }\n}\n\nexport default Li;","import React, {PureComponent} from 'react';\nimport Li from './Li'\n\nclass Todos extends PureComponent {\n    render() {\n        let {data, changeData, editText, remove} = this.props;\n        return (\n            <ul id=\"todo-list\">\n                {\n                    data.map((item) => {\n                        return (\n                            <Li\n                                item={item}\n                                key={item.id}\n                                changeData={changeData}\n                                editText={editText}\n                                remove={remove}\n                            />\n                        );\n                    })\n                }\n            </ul>\n        );\n    }\n}\n\nexport default Todos;","import React, {PureComponent} from 'react';\n\nclass State extends PureComponent {\n    render() {\n        let {data, removeDone} = this.props;\n        let doneData = data.filter((item) => { return item.done});\n        let undoneData = data.filter((item) => { return !item.done});\n        return (\n            <div id=\"todo-stats\">\n                <span className=\"todo-count\"></span>\n                <span className=\"number\">{undoneData.length}</span>\n                <span className=\"word\"> item</span>\n                {\n                doneData.length<1?\"\":\n                <span className=\"todo-clear\">\n                    <a href=\"/#\" onClick={()=>{\n                        removeDone();\n                    }}>\n                        <span className=\"word-done\">{doneData.length}</span> Completed\n                    </a>\n                </span>\n                }\n            </div>\n        );\n    }\n}\n\nexport default State;","import React, {PureComponent} from 'react';\nimport Title from './Title';\nimport Create from './Create';\nimport Todos from './Todos';\nimport State from './State';\nimport './App.css';\n\nclass App extends PureComponent {\n    state = {\n        data: [\n            {\n                id: 0,\n                txt: 'example',\n                done: false,\n            }\n        ],\n    }\n    addData = (txt) => {\n        let {data} = this.state;\n        data.push({\n            id: Date.now(),\n            txt,\n            done: false,\n        });\n        this.setState({\n            // data  // 因為用PureComponent，它只比對第一層(data)，發現第一層一樣所以不更新，需改成如下返回一個新對象\n            data: [...data]\n        });\n    }\n    changeData = (id, done) => {\n        let {data} = this.state;\n        data.forEach((item) => {\n            if(item.id === id){\n                item.done = done\n            }\n        });\n        this.setState({\n            data: data.map((item) => {return {...item}})\n        });\n    }\n    editText = (id, txt) => {\n        let {data} = this.state;\n        data.forEach((item) => {\n            if(item.id === id){\n                item.txt = txt\n            }\n        });\n        this.setState({\n            data: data.map((item) => {return {...item}})\n        });\n    }\n    remove = (id) => {\n        let {data} = this.state;\n        data = data.filter((item) => {return (item.id!==id)})\n        this.setState({\n            data\n        })\n    }\n    removeDone = () => {\n        let {data} = this.state;\n        data = data.filter((item) => {return (!item.done)})\n        this.setState({\n            data\n        })\n    }\n    render(){\n        let {data} = this.state;\n        return(\n            <div id=\"todoapp\">\n                <Title />\n                <div className=\"content\">\n                    <Create addData={this.addData} />\n                    <Todos\n                        data={data}\n                        changeData={this.changeData}\n                        editText={this.editText}\n                        remove={this.remove}\n                    />\n                    <State\n                        data={data}\n                        removeDone={this.removeDone}    \n                    />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n\n/*\n1. 確定數據格式\n2. 根據數據完成列表的渲染\n3. 完成添加功能\n4. 完成單向錯誤\n*/","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}